{
  "companyId": "80ee135e-9d4e-4084-8b96-c3131c04c432",
  "authTokenExpireIds": [],
  "connectorIds": [
    "functionsConnector",
    "httpConnector",
    "variablesConnector",
    "annotationConnector",
    "errorConnector"
  ],
  "createdDate": 1727878921398,
  "currentVersion": 14,
  "customerId": "7103642ff587ecb4de6b6c332453ca73",
  "description": "Imported on Tue Apr 30 2024 20:46:34 GMT+0000 (Coordinated Universal Time)",
  "flowStatus": "enabled",
  "inputSchemaCompiled": {
    "parameters": {
      "type": "object",
      "properties": {
        "mf-configObject": {
          "description": "",
          "isExpanded": true,
          "preferredDataType": "object",
          "type": "object",
          "name": "mf-configObject"
        }
      },
      "additionalProperties": false,
      "required": []
    }
  },
  "isInputSchemaSaved": true,
  "isOutputSchemaSaved": false,
  "name": "PingOne reCAPTCHA v3 subflow",
  "publishedVersion": 14,
  "settings": {
    "csp": "worker-src 'self' blob:; script-src 'self' https://cdn.jsdelivr.net https://code.jquery.com https://devsdk.singularkey.com http://cdnjs.cloudflare.com 'unsafe-inline' 'unsafe-eval';",
    "intermediateLoadingScreenCSS": "",
    "intermediateLoadingScreenHTML": "",
    "css": ".companyLogo {\n    /* Ping Logo  */\n    content: url(\"https://cdn.glitch.global/2e56b165-f280-41c5-82c6-430c70bc9f97/RecaptchaLogo.svg.png?v=1711732381261\");\n    height: 100px;\n    width: 671;\n}",
    "cssLinks": [],
    "debugMode": true,
    "flowTimeoutInSeconds": 3600,
    "jsLinks": [
      {
        "crossorigin": "",
        "defer": "false",
        "integrity": "",
        "label": "https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js",
        "referrerpolicy": "",
        "type": "",
        "value": "https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"
      },
      {
        "crossorigin": "",
        "defer": "false",
        "integrity": "",
        "label": "https://www.google.com/recaptcha/api.js",
        "referrerpolicy": "",
        "type": "",
        "value": "https://www.google.com/recaptcha/api.js"
      },
      {
        "crossorigin": "",
        "defer": "false",
        "integrity": "",
        "label": "https://www.google.com/recaptcha/api.js?render=6LfdK6QpAAAAALcGPNmzzyK4Baigr2UWjnL57ZIr",
        "referrerpolicy": "",
        "type": "",
        "value": "https://www.google.com/recaptcha/api.js?render=6LfdK6QpAAAAALcGPNmzzyK4Baigr2UWjnL57ZIr"
      }
    ],
    "logLevel": 3,
    "useCustomCSS": true,
    "useCustomScript": true
  },
  "timeouts": "null",
  "updatedDate": 1727878923674,
  "flowId": "a88aac2c64be5ba085d1376cda5c197b",
  "versionId": 14,
  "graphData": {
    "elements": {
      "nodes": [
        {
          "data": {
            "capabilityName": "AGreaterThanEqualToB",
            "connectionId": "de650ca45593b82c49064ead10b9fe17",
            "connectorId": "functionsConnector",
            "id": "mwnugsl3ez",
            "idUnique": "dz4nfgx57r",
            "isDisabled": false,
            "label": "Functions",
            "name": "Functions",
            "nodeType": "CONNECTION",
            "properties": {
              "leftValueA": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"moustache\",\n        \"data\": \"{{local.d5xd4gj7l7.payload.output.rawResponse.body.score}}\",\n        \"name\": \"score\",\n        \"children\": [\n          {\n            \"text\": \"\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "nodeTitle": {
                "value": "reCaptcha Result Check"
              },
              "rightValueB": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"variable.svg\",\n        \"url\": \"CAPTCHA_THRESHOLD\",\n        \"data\": \"{{global.variables.CAPTCHA_THRESHOLD}}\",\n        \"tooltip\": \"{{global.variables.CAPTCHA_THRESHOLD}}\",\n        \"children\": [\n          {\n            \"text\": \"CAPTCHA_THRESHOLD\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "type": {
                "value": "number"
              }
            },
            "status": "configured",
            "type": "trigger"
          },
          "position": {
            "x": 1740,
            "y": 510
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "7lbvbju71e",
            "idUnique": "bzw3senjno",
            "label": "Evaluator",
            "nodeType": "EVAL",
            "properties": {
              "umc3t47pkp": {
                "value": "anyTriggersFalse"
              }
            }
          },
          "position": {
            "x": 1560,
            "y": 510
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "capabilityName": "makeRestApiCall",
            "connectionId": "867ed4363b2bc21c860085ad2baa817d",
            "connectorId": "httpConnector",
            "id": "d5xd4gj7l7",
            "idUnique": "rg734w4u88",
            "isDisabled": false,
            "label": "Http",
            "name": "Http",
            "nodeType": "CONNECTION",
            "properties": {
              "bodyParams": {
                "value": [
                  {
                    "key": "secret",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"variable.svg\",\n        \"url\": \"CAPTCHA_V3_SECRET\",\n        \"data\": \"{{global.variables.CAPTCHA_V3_SECRET}}\",\n        \"tooltip\": \"{{global.variables.CAPTCHA_V3_SECRET}}\",\n        \"children\": [\n          {\n            \"text\": \"CAPTCHA_V3_SECRET\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  },
                  {
                    "key": "response",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"http.svg\",\n        \"url\": \"recaptcha_token\",\n        \"data\": \"{{local.srsltttf0p.payload.output.recaptcha_token}}\",\n        \"tooltip\": \"{{local.srsltttf0p.payload.output.recaptcha_token}}\",\n        \"children\": [\n          {\n            \"text\": \"recaptcha_token\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  }
                ]
              },
              "httpBody": {
                "value": "formData"
              },
              "httpMethod": {
                "value": "POST"
              },
              "nodeTitle": {
                "value": "Verify Captcha API Call"
              },
              "outputSchema": {
                "value": "{\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"challenge_ts\": {\n      \"type\": \"string\"\n    },\n    \"hostname\": {\n      \"type\": \"string\"\n    },\n    \"error-codes\": {\n      \"type\": \"array\",\n      \"items\": {}\n    }\n  },\n  \"required\": [\n    \"success\",\n    \"challenge_ts\",\n    \"hostname\",\n    \"error-codes\"\n  ]\n}"
              },
              "url": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"https://www.google.com/recaptcha/api/siteverify\"\n      }\n    ]\n  }\n]"
              },
              "contentType": {
                "value": null
              }
            },
            "status": "configured",
            "type": "trigger"
          },
          "position": {
            "x": 1440,
            "y": 510
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "pyvavyfdno",
            "idUnique": "hw6u1vsgw5",
            "nodeType": "EVAL",
            "properties": {
              "i21eb2n1ho": {
                "value": "anyTriggersFalse"
              },
              "upiynhx9v": {
                "value": "anyTriggersFalse"
              }
            }
          },
          "position": {
            "x": 1860,
            "y": 510
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "capabilityName": "customHTMLTemplate",
            "connectionId": "867ed4363b2bc21c860085ad2baa817d",
            "connectorId": "httpConnector",
            "id": "srsltttf0p",
            "idUnique": "5c7do7l9e6",
            "isDisabled": false,
            "label": "Http",
            "name": "Http",
            "nodeType": "CONNECTION",
            "properties": {
              "CAPTCHA_V3_SITE_KEY": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"{{global.variables.mf-configObject.config.mf-str-captchaV3SiteKey}}\"\n      }\n    ]\n  }\n]"
              },
              "buttonLabel": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Continue\"\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "customHTML": {
                "value": "<div class=\"align-self-center\">\n    <!-- Polling component for real-time updates -->\n    <div data-skcomponent=\"skpolling\" data-skpollInterval=\"2000\" data-skpollRetries=\"60\" data-skpollChallengeStatus=\"false\"></div>\n</div>\n<div class=\"end-user-nano\">\n    <!-- Main container for centering content -->\n    <div class=\"bg-light d-flex flex-column justify-content-center align-items-center position-absolute top-0 start-0 bottom-0 end-0 overflow-auto\">\n        <!-- Container with fixed width for the card -->\n        <div style=\"max-width: 400px; min-width: 400px; width: 100%\">\n            <!-- Card for holding the content -->\n            <div class=\"card shadow mb-5\">\n                <!-- Card body with padding and column layout -->\n                <div class=\"card-body p-5 d-flex flex-column\">\n                    <!-- Company logo -->\n                    <img class=\"companyLogo align-self-center mb-5\" src=\"{{global.variables.companyLogo}}\" alt=\"{{global.variables.companyName}}\" />\n\n                    <!-- Generic Error Message -->\n                    <p class=\"text-danger mdi mdi-alert-circle text-center\" id=\"feedbackError\"  data-id=\"feedback\" data-skcomponent=\"skerror\" aria-live=\"assertive\"></p>\n\n                    <!-- Conditional title -->\n                    {{#if title}}\n                    <h1 class=\"text-center mb-4\">{{title}}</h1>\n                    {{/if}}\n\n                    <!-- Conditional textOne -->\n                    {{#if textOne}}\n                    <p class=\"text-muted text-center\">{{textOne}}</p>\n                    {{/if}}\n\n                    <!-- Conditional textTwo -->\n                    {{#if textTwo}}\n                    <p class=\"text-muted text-center\">{{textTwo}}</p>\n                    {{/if}}\n\n                    <!-- Form for sign-on -->\n                    <form id=\"signonForm\" data-id=\"signonForm\">\n                        <!-- Captcha form fields -->\n                        <input type=\"hidden\" id=\"g-recaptcha-response\" name=\"g-recaptcha-response\">\n                        <input type=\"hidden\" id=\"recaptcha_token\" name=\"recapture_token\">\n\n                        <!-- Button container -->\n                        <div class=\"d-flex flex-column\">\n                            <!-- Captcha button -->\n                            <button class=\"btn btn-primary mb-3\" type=\"button\" id=\"captchaBtn\">{{buttonLabel}}</button>\n\n                            <!-- Submit button (initially hidden) -->\n                            <div class=\"d-flex flex-column\">\n                                <button data-id=\"button\" type=\"submit\" class=\"btn btn-primary mb-3 d-none\" data-skcomponent=\"skbutton\"\n                                        data-skbuttontype=\"form-submit\" data-skform=\"signonForm\" id=\"btnSignIn\" data-skbuttonvalue=\"SIGNON\">\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>"
              },
              "customScript": {
                "value": "\n// Initializes the handler for the captcha button click event.\nconst createCaptchaButtonHandler = () => {\n  let captchaButton = document.getElementById(\"captchaBtn\");\n\n  if (captchaButton) {\n    captchaButton.addEventListener(\"click\", function (e) {\n      e.preventDefault();\n      grecaptcha.ready(function () {\nconsole.log(\"CAPTCHA_V3_SITE_KEY\" , CAPTCHA_V3_SITE_KEY )\n        grecaptcha.execute('{{CAPTCHA_V3_SITE_KEY}}', { action: 'submit' })\n          .then(function (token) {\n            document.getElementById('recaptcha_token').value = token;\n            console.log(\"Token\",token);\n            document.getElementById(\"btnSignIn\").click();\n          })\n          .catch(error => {\n            console.error(\"Captcha execution failed:\", error);\n          });\n      });\n    });\n  }\n};\n\nconst setFieldFocus = (id) => {\n  const element = document.getElementById(id);\n  if (element) {\n    element.focus();\n  }\n}\n\nconst makePasswordToggle = (id) => {\n  let container = document.getElementById(id);\n\n  if (container) {\n    let password = container.getElementsByTagName(\"input\")[0];\n    let toggler = document.createElement(\"button\");\n    toggler.setAttribute(\"type\", \"button\");\n    toggler.setAttribute(\"aria-label\", \"Show/Hide Password\");\n    toggler.className = \"btn mdi mdi-eye-off-outline position-absolute end-0 top-50 translate-middle-y\";\n    container.appendChild(toggler);\n\n    function showHidePassword() {\n      if (password.type == \"password\") {\n        password.setAttribute(\"type\", \"text\");\n        toggler.classList.add(\"mdi-eye-outline\");\n        toggler.classList.remove(\"mdi-eye-off-outline\");\n      } else {\n        toggler.classList.add(\"mdi-eye-off-outline\");\n        toggler.classList.remove(\"mdi-eye-outline\");\n        password.setAttribute(\"type\", \"password\");\n      }\n      password.focus();\n    };\n\n    toggler.addEventListener(\"click\", showHidePassword);\n  }\n}\n\nconst start = () => {\n  makePasswordToggle(\"passwordDiv\");\n  setFieldFocus(\"username\");\n  createCaptchaButtonHandler();\n}\n\nif (document.readyState === \"loading\") {\n  // Loading hasn't finished yet\n  document.addEventListener(\"DOMContentLoaded\", start);\n} else {\n  // `DOMContentLoaded` has already fired\n  start();\n}"
              },
              "formFieldsList": {
                "value": [
                  {
                    "displayName": "username",
                    "hashedVisibility": false,
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "propertyName": "username",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"demo_user\"\n      }\n    ]\n  }\n]"
                  },
                  {
                    "displayName": "password",
                    "hashedVisibility": false,
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "propertyName": "password",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  },
                  {
                    "hashedVisibility": false,
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "propertyName": "recaptcha_token",
                    "value": ""
                  },
                  {
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "propertyName": "buttonValue"
                  }
                ]
              },
              "inputSchema": {
                "value": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"CAPTCHA_V3_SITE_KEY\": {\n      \"type\": \"string\",\n      \"displayName\": \"Captcha Site Key\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true,\n      \"propertyName\": \"CAPTCHA_V3_SITE_KEY\"\n    },\n    \"title\": {\n      \"type\": \"string\",\n      \"displayName\": \"Title\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true,\n      \"propertyName\": \"title\"\n    },\n    \"textOne\": {\n      \"type\": \"string\",\n      \"displayName\": \"Text One\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true,\n      \"propertyName\": \"textOne\"\n    },\n    \"textTwo\": {\n      \"type\": \"string\",\n      \"displayName\": \"Text Two\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true,\n      \"propertyName\": \"textTwo\"\n    },\n    \"buttonLabel\": {\n      \"type\": \"string\",\n      \"displayName\": \"Button Label\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true,\n      \"propertyName\": \"buttonLabel\"\n    }\n  }\n}"
              },
              "nodeTitle": {
                "value": "Reference Form with reCaptcha V3"
              },
              "textOne": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"If you are a BOT, please go away\"\n      }\n    ]\n  }\n]"
              },
              "textTwo": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Please push button to continue\"\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "title": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"We are going to check you are not a BOT with recaptcha\"\n      }\n    ]\n  }\n]"
              }
            },
            "status": "configured",
            "type": "trigger"
          },
          "position": {
            "x": 1147,
            "y": 510
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "capabilityName": "saveValue",
            "connectionId": "06922a684039827499bdbdd97f49827b",
            "connectorId": "variablesConnector",
            "id": "fk5qu0scfl",
            "idUnique": "syyanus7e7",
            "label": "Variables",
            "name": "Variables",
            "nodeType": "CONNECTION",
            "properties": {
              "nodeTitle": {
                "value": "Company Variables"
              },
              "saveVariables": {
                "value": [
                  {
                    "key": 0.20674159122602198,
                    "label": "CAPTCHA_V3_SITE_KEY (string - flowInstance)",
                    "name": "CAPTCHA_V3_SITE_KEY",
                    "nameDefault": "mf-captchaV3SiteKey",
                    "type": "string",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"{{global.variables.mf-configObject.config.mf-str-captchaV3SiteKey}}\"\n      }\n    ]\n  }\n]"
                  },
                  {
                    "key": 0.3983255169680584,
                    "label": "CAPTCHA_V3_SECRET (string - flowInstance)",
                    "name": "CAPTCHA_V3_SECRET",
                    "nameDefault": "mf-gv-captchaV3SecretKey\t",
                    "type": "string",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"{{global.variables.mf-configObject.config.mf-str-captchaV3SecretKey}}\"\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  },
                  {
                    "key": 0.07864115773379288,
                    "label": "CAPTCHA_THRESHOLD (number - flowInstance)",
                    "name": "CAPTCHA_THRESHOLD",
                    "nameDefault": "gv-captchaThreshold",
                    "type": "number",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"{{global.variables.mf-configObject.config.mf-str-captchaThreshold}}\"\n      }\n    ]\n  }\n]"
                  },
                  {
                    "key": 0.5791095173454557,
                    "label": "companyLogo (string - flowInstance)",
                    "name": "companyLogo",
                    "nameDefault": null,
                    "type": "string",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"{{global.variables.mf-configObject.config.mf-str-companyLogo}}\"\n      }\n    ]\n  }\n]"
                  }
                ]
              }
            },
            "status": "configured",
            "type": "trigger"
          },
          "position": {
            "x": 547,
            "y": 510
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "6wf7qezhuw",
            "nodeType": "EVAL",
            "properties": {
              "srsltttf0p": {
                "value": "allTriggersTrue"
              }
            }
          },
          "position": {
            "x": 667,
            "y": 510
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "capabilityName": "customHTMLTemplate",
            "connectionId": "867ed4363b2bc21c860085ad2baa817d",
            "connectorId": "httpConnector",
            "id": "am4qtuerzq",
            "idUnique": "p3z6662uwb",
            "label": "Http",
            "name": "Http",
            "nodeType": "CONNECTION",
            "properties": {
              "backgroundColor": {
                "value": "#9dc967ff"
              },
              "customCSS": {
                "value": ":root {\n  --animation-dimension: 120px;\n  --animation-start-color: #71e171;\n  --animation-midway-color: #67d067;\n  --animation-finish-color: #59b259;\n}\n\n.checkmark {\n  width: var(--animation-dimension);\n  height: var(--animation-dimension);\n  border-radius: 50%;\n  display: block;\n  stroke-width: 5;\n  stroke: #ffffff;\n  stroke-miterlimit: 10;\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\n  animation: fill 0.4s ease-in-out 0.4s forwards,\n    scale 0.3s ease-in-out 0.9s both;\n}\n\n.checkmarkCircle {\n  stroke-dasharray: 166;\n  stroke-dashoffset: 166;\n  stroke-width: 5;\n  stroke-miterlimit: 10;\n  stroke: var(--animation-finish-color);\n  fill: none;\n  animation: stroke 0.6s cubic-bezier(0.65, 0, 0.45, 1) forwards,\n    colorChange 1.2s ease-in-out forwards;\n}\n\n.checkmarkCheck {\n  transform-origin: 50% 50%;\n  stroke-dasharray: 48;\n  stroke-dashoffset: 48;\n  animation: stroke 0.3s cubic-bezier(0.65, 0, 0.45, 1) 0.8s forwards,\n    colorChange 0.6s ease-in-out 0.8s forwards;\n}\n\n@keyframes colorChange {\n  0% {\n    stroke: var(--animation-start-color);\n  }\n  50% {\n    stroke: var(--animation-midway-color);\n  } \n  100% {\n    stroke: var(--animation-finish-color);\n  }\n}\n\n@keyframes stroke {\n  100% {\n    stroke-dashoffset: 0;\n  }\n}\n@keyframes scale {\n  0%,\n  100% {\n    transform: none;\n  }\n  50% {\n    transform: scale3d(1.1, 1.1, 1);\n  }\n  70% {\n    transform: scale3d(0.98, 0.98, 1);\n  }\n  85% {\n    transform: scale3d(1.02, 1.02, 1);\n  }\n}\n@keyframes fill {\n  100% {\n    box-shadow: inset 0px 0px 0px 0px var(--animation-finish-color);\n  }\n}"
              },
              "customHTML": {
                "value": "<div class=\"align-self-center\">\n    <!-- Polling component for real-time updates -->\n    <div data-skcomponent=\"skpolling\" data-skpollInterval=\"30\" data-skpollRetries=\"1\" data-skpollChallengeStatus=\"false\"></div>\n</div>\n\n<div class=\"end-user-nano\">\n    <!-- Main container for centering content -->\n    <div class=\"bg-light d-flex flex-column justify-content-center align-items-center position-absolute top-0 start-0 bottom-0 end-0 overflow-auto\">\n        <!-- Container with fixed width for the card -->\n        <div style=\"max-width: 400px; min-width: 400px; width: 100%\">\n            <!-- Card for holding the content -->\n            <div class=\"card shadow mb-5\">\n                <!-- Card body with padding and column layout -->\n                <div class=\"card-body p-5 d-flex flex-column\">\n                    <!-- Company logo -->\n                    <img class=\"companyLogo align-self-center mb-5\" src=\"{{global.variables.companyLogo}}\" alt=\"{{global.variables.companyName}}\" />\n\n                    <!-- Conditional title -->\n                    {{#if title}}\n                    <h1 class=\"text-center mb-4\">{{title}}</h1>\n                    {{/if}}\n\n                    <!-- Checkmark icon -->\n                    <div class=\"mx-auto mt-3 mb-4\">\n                        <svg class=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\">\n                            <circle class=\"checkmarkCircle\" cx=\"26\" cy=\"26\" r=\"25\" fill=\"none\" />\n                            <path class=\"checkmarkCheck\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\" />\n                        </svg>\n                    </div>\n\n                    <!-- Conditional textOne -->\n                    {{#if textOne}}\n                    <p class=\"text-muted text-center\">{{textOne}}</p>\n                    {{/if}}\n\n                    <!-- Conditional textTwo -->\n                    {{#if textTwo}}\n                    <p class=\"text-muted text-center\">{{textTwo}}</p>\n                    {{/if}}\n\n                    <!-- Conditional textThree -->\n                    {{#if textThree}}\n                    <p class=\"text-center fw-bold\">{{textThree}}</p>\n                    {{/if}}\n\n                    <!-- Generic Error Message -->\n                    <p class=\"text-danger mdi mdi-alert-circle\" data-id=\"feedback\" data-skcomponent=\"skerror\"></p>\n\n                    <!-- Conditional Submit Button -->\n                    {{#if buttonLabel}}\n                    <div class=\"d-flex flex-column\">\n                        <button id=\"submitBtn\" data-id=\"submitBtn\" class=\"btn btn-primary mb-3\" type=\"submit\" data-skcomponent=\"skbutton\" data-skbuttontype=\"next-event\" data-skbuttonvalue=\"NEXT\">\n                            {{buttonLabel}}\n                        </button>\n                    </div>\n                    {{/if}}\n                </div>\n            </div>\n        </div>\n    </div>\n</div>"
              },
              "customScript": {},
              "formFieldsList": {
                "value": [
                  {
                    "displayName": "Username",
                    "hashedVisibility": false,
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "propertyName": "username",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  },
                  {
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "propertyName": "buttonValue"
                  },
                  {
                    "displayName": "Password",
                    "hashedVisibility": true,
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "propertyName": "password",
                    "value": ""
                  }
                ]
              },
              "inputSchema": {
                "value": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"title\": {\n      \"type\": \"string\",\n      \"displayName\": \"Title\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true,\n      \"propertyName\": \"title\"\n    },\n    \"textOne\": {\n      \"type\": \"string\",\n      \"displayName\": \"Text One\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true,\n      \"propertyName\": \"textOne\"\n    },\n    \"textTwo\": {\n      \"type\": \"string\",\n      \"displayName\": \"Text Two\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true,\n      \"propertyName\": \"textTwo\"\n    },\n    \"textThree\": {\n      \"type\": \"string\",\n      \"displayName\": \"Text Three\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true,\n      \"propertyName\": \"textThree\"\n    },\n    \"buttonLabel\": {\n      \"type\": \"string\",\n      \"displayName\": \"Button Label\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true,\n      \"propertyName\": \"buttonLabel\"\n    }\n  }\n}"
              },
              "nodeDescription": {
                "value": "Success message with animated checkmark"
              },
              "nodeTitle": {
                "value": "Verification Success"
              },
              "textOne": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"For the reCAPTCHA v3 scale, the range is from 0.0 to 1.0, where 0.0 indicates the highest suspicion of being a bot, and 1.0 signifies the highest confidence in genuine human activity.\"\n      }\n    ]\n  }\n]"
              },
              "textThree": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Your score: \"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"moustache\",\n        \"data\": \"{{local.d5xd4gj7l7.payload.output.rawResponse.body.score}}\",\n        \"name\": \"score\",\n        \"children\": [\n          {\n            \"text\": \"\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "textTwo": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"A score of \"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"variable.svg\",\n        \"url\": \"CAPTCHA_THRESHOLD\",\n        \"data\": \"{{global.variables.CAPTCHA_THRESHOLD}}\",\n        \"tooltip\": \"{{global.variables.CAPTCHA_THRESHOLD}}\",\n        \"children\": [\n          {\n            \"text\": \"CAPTCHA_THRESHOLD\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \" or greater is required to proceed.\"\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "title": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"reCAPTCHA\"\n      },\n      {\n        \"text\": \" Verification \"\n      },\n      {\n        \"text\": \"Success!\"\n      }\n    ]\n  }\n]"
              },
              "validationRules": {
                "value": []
              }
            },
            "status": "configured",
            "type": "trigger"
          },
          "position": {
            "x": 2460,
            "y": 510
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "capabilityName": "customHTMLTemplate",
            "connectionId": "867ed4363b2bc21c860085ad2baa817d",
            "connectorId": "httpConnector",
            "id": "i21eb2n1ho",
            "idUnique": "the8zdg5iv",
            "label": "Http",
            "name": "Http",
            "nodeType": "CONNECTION",
            "properties": {
              "backgroundColor": {
                "value": "#ffc8c1ff"
              },
              "buttonLabel": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Continue\"\n      }\n    ]\n  }\n]"
              },
              "customCSS": {
                "value": ":root {\n    --failure-animation-dimension: 120px;\n    /* --failure-animation-start-color: #ff8a80;\n    --failure-animation-midway-color: #ff5252;\n    --failure-animation-finish-color: #ff1744; */\n    --failure-animation-start-color: #e63946; /* A bright, vivid red */\n    --failure-animation-midway-color: #d90429; /* A slightly deeper red */\n    --failure-animation-finish-color: #ba000d; /* A rich, dark red */\n}\n\n.xmark {\n    width: var(--failure-animation-dimension);\n    height: var(--failure-animation-dimension);\n    display: block;\n    stroke-width: 5;\n    stroke: #ffffff;\n    stroke-miterlimit: 10;\n    border-radius: 50%;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n    animation: fill 0.4s ease-in-out 0.4s forwards, scale 0.3s ease-in-out 0.9s both;\n}\n\n.xmarkCircle {\n    stroke-dasharray: 166;\n    stroke-dashoffset: 166;\n    stroke-width: 5;\n    stroke: var(--failure-animation-finish-color);\n    fill: none;\n    animation: stroke 0.6s cubic-bezier(0.65, 0, 0.45, 1) forwards;\n}\n\n.xmarkX {\n    stroke-dasharray: 56;\n    stroke-dashoffset: 56;\n    stroke-width: 5;\n    stroke: var(--failure-animation-start-color);\n    animation: strokeX 0.3s cubic-bezier(0.65, 0, 0.45, 1) 0.8s forwards, colorChangeX 0.6s ease-in-out 0.8s forwards;\n}\n\n@keyframes stroke {\n    to {\n        stroke-dashoffset: 0;\n    }\n}\n\n@keyframes strokeX {\n    to {\n        stroke-dashoffset: 0;\n    }\n}\n\n@keyframes colorChangeX {\n    0% {\n        stroke: var(--failure-animation-start-color);\n    }\n    50% {\n        stroke: var(--failure-animation-midway-color);\n    }\n    100% {\n        stroke: var(--failure-animation-finish-color);\n    }\n}\n\n@keyframes scale {\n  0%,\n  100% {\n    transform: none;\n  }\n  50% {\n    transform: scale3d(1.1, 1.1, 1);\n  }\n  70% {\n    transform: scale3d(0.98, 0.98, 1);\n  }\n  85% {\n    transform: scale3d(1.02, 1.02, 1);\n  }\n}\n\n/* Ensure scale and fill animations are correctly applied */\n"
              },
              "customHTML": {
                "value": "<div class=\"end-user-nano\">\n    <div\n        class=\"bg-light d-flex flex-column justify-content-center align-items-center position-absolute top-0 start-0 bottom-0 end-0 overflow-auto\">\n        <div style=\"max-width: 400px; min-width: 400px; width: 100%\">\n            <div class=\"card shadow mb-5\">\n                <div class=\"card-body p-5 d-flex flex-column\">\n                    <img class=\"companyLogo align-self-center mb-5\" src=\"{{global.variables.companyLogo}}\" alt=\"{{global.variables.companyName}}\" />\n\n                    {{#if title}}\n                    <h1 class=\"text-center mb-4\">{{title}}</h1>\n                    {{/if}}\n\n                    <div class=\"mx-auto mt-3 mb-4\">\n                        <svg class=\"xmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\">\n                            <circle class=\"xmarkCircle\" cx=\"26\" cy=\"26\" r=\"25\" fill=\"none\" />\n                            <path class=\"xmarkX\" fill=\"none\" d=\"M16,16 L36,36 M36,16 L16,36\" />\n                        </svg>\n                    </div>\n\n                    {{#if textOne}}\n                    <p class=\"text-muted text-center\">{{textOne}}</p>\n                    {{/if}}\n\n                    {{#if textTwo}}\n                    <p class=\"text-muted text-center\">{{textTwo}}</p>\n                    {{/if}}\n\n                    {{#if textThree}}\n                    <p class=\"text-center fw-bold\">{{textThree}}</p>\n                    {{/if}}\n\n                    {{#if textFour}}\n                    <p class=\"text-center fw-bold\">{{textFour}}</p>\n                    {{/if}}\n\n                    <p class=\"text-danger mdi mdi-alert-circle\" data-id=\"feedback\" data-skcomponent=\"skerror\"></p>\n\n                    {{#if buttonLabel}}\n                    <div class=\"d-flex flex-column\">\n                        <button id=\"submitBtn\" data-id=\"submitBtn\" class=\"btn btn-primary mb-3\" type=\"submit\" data-skcomponent=\"skbutton\"\n                        data-skbuttontype=\"next-event\" data-skbuttonvalue=\"CONTINUE\" >\n                        {{buttonLabel}}\n                        </button>\n                    </div>\n                    {{/if}}\n                    {{#if buttonLabel2}}\n                    <div class=\"d-flex flex-column\">\n                        <button id=\"failBtn\" data-id=\"failBtn\" class=\"btn btn-primary mb-3\" type=\"submit\" data-skcomponent=\"skbutton\"\n                        data-skbuttontype=\"next-event\" data-skbuttonvalue=\"FAIL\" >\n                        {{buttonLabel2}}\n                        </button>\n                    </div>\n                    {{/if}}\n                </div>\n            </div>\n        </div>\n    </div>\n</div>"
              },
              "customScript": {},
              "formFieldsList": {
                "value": [
                  {
                    "displayName": "Username",
                    "hashedVisibility": false,
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "propertyName": "username",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  },
                  {
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "propertyName": "buttonValue"
                  },
                  {
                    "displayName": "Password",
                    "hashedVisibility": true,
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "propertyName": "password",
                    "value": ""
                  }
                ]
              },
              "inputSchema": {
                "value": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"title\": {\n      \"type\": \"string\",\n      \"displayName\": \"Title\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true,\n      \"propertyName\": \"title\"\n    },\n    \"textOne\": {\n      \"type\": \"string\",\n      \"displayName\": \"Text One\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true,\n      \"propertyName\": \"textOne\"\n    },\n    \"textTwo\": {\n      \"type\": \"string\",\n      \"displayName\": \"Text Two\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true,\n      \"propertyName\": \"textTwo\"\n    },\n    \"textThree\": {\n      \"type\": \"string\",\n      \"displayName\": \"Text Three\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true,\n      \"propertyName\": \"textThree\"\n    },\n    \"textFour\": {\n      \"type\": \"string\",\n      \"displayName\": \"Text Four\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true,\n      \"propertyName\": \"textFour\"\n    },\n    \"buttonLabel\": {\n      \"type\": \"string\",\n      \"displayName\": \"Button Label\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true,\n      \"propertyName\": \"buttonLabel\"\n    },\n    \"buttonLabel2\": {\n      \"type\": \"string\",\n      \"displayName\": \"Button Label2\",\n      \"preferredControlType\": \"textField\",\n      \"enableParameters\": true,\n      \"propertyName\": \"buttonLabel2\"\n    }\n  }\n}"
              },
              "nodeDescription": {
                "value": "Error message with animated X"
              },
              "nodeTitle": {
                "value": "Verification Error"
              },
              "textOne": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"For the reCAPTCHA v3 scale, the range is from 0.0 to 1.0, where 0.0 indicates the highest suspicion of being a bot, and 1.0 signifies the highest confidence in genuine human activity.\"\n      }\n    ]\n  }\n]"
              },
              "textThree": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Your score: \"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"moustache\",\n        \"data\": \"{{local.d5xd4gj7l7.payload.output.rawResponse.body.score}}\",\n        \"name\": \"score\",\n        \"children\": [\n          {\n            \"text\": \"\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "textTwo": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"A score of \"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"variable.svg\",\n        \"url\": \"CAPTCHA_THRESHOLD\",\n        \"data\": \"{{global.variables.CAPTCHA_THRESHOLD}}\",\n        \"tooltip\": \"{{global.variables.CAPTCHA_THRESHOLD}}\",\n        \"children\": [\n          {\n            \"text\": \"CAPTCHA_THRESHOLD\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \" or \"\n      },\n      {\n        \"text\": \"greater is required to proceed.\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "title": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"reCAPTCHA\"\n      },\n      {\n        \"text\": \" Verification \"\n      },\n      {\n        \"text\": \"Failure\"\n      }\n    ]\n  }\n]"
              },
              "validationRules": {
                "value": []
              },
              "buttonLabel2": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Return to Login\"\n      }\n    ]\n  }\n]"
              }
            },
            "status": "configured",
            "type": "trigger"
          },
          "position": {
            "x": 2040,
            "y": 720
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "capabilityName": "updateAnnotationProperties",
            "connectionId": "921bfae85c38ed45045e07be703d86b8",
            "connectorId": "annotationConnector",
            "id": "4oqyd43bon",
            "name": "Annotation",
            "nodeType": "ANNOTATION",
            "properties": {
              "annotation": {
                "value": "reCAPTCHA v3 Sign On Example"
              },
              "annotationTextColor": {
                "value": "#ffffffff"
              },
              "backgroundColor": {
                "value": "#4462edff"
              },
              "cornerRadius": {
                "value": 8
              },
              "fontFamily": {
                "value": "sans-serif"
              },
              "fontSize": {
                "value": 16
              },
              "fontStyle": {
                "value": "bold"
              },
              "width": {
                "value": 1800
              }
            },
            "status": "configured",
            "type": "action"
          },
          "position": {
            "x": 581,
            "y": 214
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "capabilityName": "updateAnnotationProperties",
            "connectionId": "921bfae85c38ed45045e07be703d86b8",
            "connectorId": "annotationConnector",
            "id": "u3et9oq8mt",
            "idUnique": "lb31g4gkg6",
            "name": "Annotation",
            "nodeType": "ANNOTATION",
            "properties": {
              "annotation": {
                "value": "Set Flow Variables for reCaptcha v3 key and secret"
              },
              "annotationTextColor": {
                "value": "#000000"
              },
              "backgroundColor": {
                "value": "#50e3c2ff"
              },
              "cornerRadius": {
                "value": 8
              },
              "fontFamily": {
                "value": "sans-serif"
              },
              "fontSize": {
                "value": 14
              },
              "fontStyle": {
                "value": "normal"
              },
              "strokeColor": {
                "value": "#181818ff"
              },
              "strokeEnabled": {
                "value": true
              },
              "strokeWidth": {
                "value": 1
              },
              "width": {
                "value": 400
              }
            },
            "status": "configured",
            "type": "action"
          },
          "position": {
            "x": 341,
            "y": 334
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "capabilityName": "customFunction",
            "connectionId": "de650ca45593b82c49064ead10b9fe17",
            "connectorId": "functionsConnector",
            "id": "5p51qbker7",
            "label": "Functions",
            "name": "Functions",
            "nodeType": "CONNECTION",
            "properties": {
              "code": {
                "value": "// Iterate over params object, return false if any\n// passed in parameters are null/empty\nmodule.exports = a = async ({ params }) => {\n\n\tfor (var key in params) {\n\t\tif (!params[key]) {\n\t\t\treturn false; \n\t\t}\n\t}\n\n\treturn \n}"
              },
              "nodeDescription": {
                "value": "Add input variables to check for null/empty"
              },
              "nodeTitle": {
                "value": "Flow Configuration Check"
              },
              "outputSchema": {
                "value": "{\n\t\"output\": {\n\t\t\"type\": \"object\",\n\t\t\"properties\": {\n\t\t\t\n\t\t}\n\t}\n}"
              },
              "variableInputList": {
                "value": [
                  {
                    "name": "captchaSiteKey",
                    "preferredDataType": "string",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"{{global.variables.mf-configObject.config.mf-str-captchaV3SiteKey}}\"\n      }\n    ]\n  }\n]"
                  },
                  {
                    "name": "captchaSecret",
                    "preferredDataType": "string",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"{{global.variables.mf-configObject.config.mf-str-captchaV3SecretKey}}\"\n      }\n    ]\n  }\n]"
                  },
                  {
                    "name": "captchaThreshold",
                    "preferredDataType": "number",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"{{global.variables.mf-configObject.config.mf-str-captchaThreshold}}\"\n      }\n    ]\n  }\n]"
                  }
                ]
              }
            },
            "status": "configured",
            "type": "trigger"
          },
          "position": {
            "x": 847,
            "y": 510
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "7jsqi65vtl",
            "nodeType": "EVAL",
            "properties": {
              "udbb34cil1": {
                "value": "anyTriggersFalse"
              },
              "undefined": {
                "value": "allTriggersTrue"
              }
            }
          },
          "position": {
            "x": 967,
            "y": 510
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "capabilityName": "customHTMLTemplate",
            "connectionId": "867ed4363b2bc21c860085ad2baa817d",
            "connectorId": "httpConnector",
            "id": "udbb34cil1",
            "idUnique": "3nm07rhtek",
            "label": "Http",
            "name": "Http",
            "nodeType": "CONNECTION",
            "properties": {
              "backgroundColor": {
                "value": "#ffc8c1ff"
              },
              "customCSS": {
                "value": ""
              },
              "customHTML": {
                "value": "<div\n  class=\"bg-light d-flex flex-column justify-content-center align-items-center position-absolute top-0 start-0 bottom-0 end-0 overflow-auto\">\n  <div style=\"max-width: 400px; min-width: 400px; width: 100%\">\n    <div class=\"card shadow mb-5\">\n      <div class=\"card-body p-5 d-flex flex-column\">\n        <img class=\"companyLogo align-self-center mb-5\" src=\"{{global.variables.companyLogo}}\" alt=\"{{global.variables.companyName}}\" />\n        <h1 class=\"text-center mb-4\">Flow Configuration Error</h1>\n        <p class=\"text-muted text-center\">{{errorMessage}}</p>\n      </div>\n    </div>\n  </div>\n</div>"
              },
              "customScript": {
                "value": ""
              },
              "errorMessage": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Unable to execute the flow due to missing flow values.\"\n      }\n    ]\n  }\n]"
              },
              "formFieldsList": {
                "value": [
                  {
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "propertyName": "buttonValue"
                  }
                ]
              },
              "inputSchema": {
                "value": "{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"errorMessage\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"displayName\": \"Error Message\",\n\t\t\t\"preferredControlType\": \"textField\",\n\t\t\t\"enableParameters\": true,\n\t\t\t\"propertyName\": \"errorMessage\"\n\t\t}\n\t}\n}"
              },
              "nodeDescription": {
                "value": "Configuration value not set error"
              },
              "nodeTitle": {
                "value": "Error Message"
              },
              "outputSchema": {
                "value": {}
              },
              "sktemplate": {
                "companyId": "ee43f700-c751-494d-9dbf-70946a85b328",
                "createdDate": 1678116166705,
                "customerId": "f3e47d945ae971a4b4142ec75012d155",
                "description": "",
                "inputSchema": "{\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"errorMessage\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"displayName\": \"Error Message\",\n\t\t\t\"preferredControlType\": \"textField\",\n\t\t\t\"enableParameters\": true,\n\t\t\t\"propertyName\": \"errorMessage\"\n\t\t}\n\t}\n}",
                "name": "Error Template",
                "outputSchema": {},
                "script": "",
                "style": "",
                "template": "",
                "uiId": "4283c0de636208a4273efe1c9fda225f",
                "updatedDate": 1678116321755,
                "validationRules": [],
                "value": "4283c0de636208a4273efe1c9fda225f",
                "version": "1.0",
                "visibility": "private"
              },
              "validationRules": {
                "value": []
              }
            },
            "status": "configured",
            "type": "trigger"
          },
          "position": {
            "x": 1147,
            "y": 720
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "capabilityName": "updateAnnotationProperties",
            "connectionId": "921bfae85c38ed45045e07be703d86b8",
            "connectorId": "annotationConnector",
            "id": "raxv2a3pax",
            "idUnique": "cw7x36wsom",
            "name": "Annotation",
            "nodeType": "ANNOTATION",
            "properties": {
              "annotation": {
                "value": "Add Custom JS link with https://www.google.com/recaptcha/api.js?render=SITEKEY_HERE"
              },
              "annotationTextColor": {
                "value": "#000000"
              },
              "backgroundColor": {
                "value": "#50e3c2ff"
              },
              "cornerRadius": {
                "value": 8
              },
              "fontFamily": {
                "value": "sans-serif"
              },
              "fontSize": {
                "value": 14
              },
              "fontStyle": {
                "value": "normal"
              },
              "strokeColor": {
                "value": "#181818ff"
              },
              "strokeEnabled": {
                "value": true
              },
              "strokeWidth": {
                "value": 1
              },
              "width": {
                "value": 630
              }
            },
            "status": "configured",
            "type": "action"
          },
          "position": {
            "x": 281,
            "y": 274
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "255mbja8pg",
            "label": "Evaluator",
            "nodeType": "EVAL"
          },
          "position": {
            "x": 2580,
            "y": 510
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "capabilityName": "createSuccessResponse",
            "connectionId": "867ed4363b2bc21c860085ad2baa817d",
            "connectorId": "httpConnector",
            "id": "058lyyouun",
            "label": "Http",
            "name": "Http",
            "nodeType": "CONNECTION",
            "properties": {
              "backgroundColor": {
                "value": "#9dc967ff"
              },
              "nodeTitle": {
                "value": "Success"
              }
            },
            "status": "configured",
            "type": "action"
          },
          "position": {
            "x": 2760,
            "y": 510
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "capabilityName": "createErrorResponse",
            "connectionId": "867ed4363b2bc21c860085ad2baa817d",
            "connectorId": "httpConnector",
            "id": "xnhu0yfz4b",
            "label": "Http",
            "name": "Http",
            "nodeType": "CONNECTION",
            "properties": {
              "backgroundColor": {
                "value": "#ffc8c1ff"
              },
              "nodeTitle": {
                "value": "send failure"
              }
            },
            "status": "configured",
            "type": "action"
          },
          "position": {
            "x": 2670,
            "y": 810
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "capabilityName": "customErrorMessage",
            "connectionId": "53ab83a4a4ab919d9f2cb02d9e111ac8",
            "connectorId": "errorConnector",
            "id": "umc3t47pkp",
            "label": "Error Message",
            "name": "Error Message",
            "nodeType": "CONNECTION",
            "properties": {
              "errorMessage": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"http.svg\",\n        \"url\": \"message\",\n        \"data\": \"{{local.d5xd4gj7l7.payload.error.message}}\",\n        \"tooltip\": \"{{local.d5xd4gj7l7.payload.error.message}}\",\n        \"children\": [\n          {\n            \"text\": \"message\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              }
            },
            "status": "configured",
            "type": "action"
          },
          "position": {
            "x": 1740,
            "y": 600
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "w8eh3mt7d1",
            "nodeType": "EVAL"
          },
          "position": {
            "x": 1290,
            "y": 510
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "capabilityName": "updateAnnotationProperties",
            "connectionId": "921bfae85c38ed45045e07be703d86b8",
            "connectorId": "annotationConnector",
            "id": "af9rdmieoj",
            "name": "Annotation",
            "nodeType": "ANNOTATION",
            "properties": {
              "annotation": {
                "value": "reCaptcha API call"
              },
              "annotationTextColor": {
                "value": "#ffffffff"
              },
              "backgroundColor": {
                "value": "#5D00D6ff"
              },
              "cornerRadius": {
                "value": 8
              },
              "fontFamily": {
                "value": "sans-serif"
              },
              "fontSize": {
                "value": 14
              },
              "fontStyle": {
                "value": "bold"
              },
              "width": {
                "value": 2000
              }
            },
            "status": "configured",
            "type": "action"
          },
          "position": {
            "x": 311,
            "y": 394
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "capabilityName": "updateAnnotationProperties",
            "connectionId": "921bfae85c38ed45045e07be703d86b8",
            "connectorId": "annotationConnector",
            "id": "ovmnj9tkg8",
            "idUnique": "o2v5xhdcbc",
            "name": "Annotation",
            "nodeType": "ANNOTATION",
            "properties": {
              "annotation": {
                "value": "Last Updated: 7/10, 2024"
              },
              "annotationTextColor": {
                "value": "#000000"
              },
              "backgroundColor": {
                "value": "#ffffffff"
              },
              "cornerRadius": {
                "value": 8
              },
              "fontFamily": {
                "value": "sans-serif"
              },
              "fontSize": {
                "value": 14
              },
              "strokeColor": {
                "value": "#181818ff"
              },
              "strokeEnabled": {
                "value": false
              },
              "strokeWidth": {
                "value": 1
              },
              "width": {
                "value": 240
              }
            },
            "status": "configured",
            "type": "action"
          },
          "position": {
            "x": 311,
            "y": 214
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "7bnowm7cwv",
            "label": "Evaluator",
            "nodeType": "EVAL"
          },
          "position": {
            "x": 397,
            "y": 510
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "capabilityName": "saveValue",
            "connectionId": "06922a684039827499bdbdd97f49827b",
            "connectorId": "variablesConnector",
            "id": "gfq88kd4x4",
            "label": "Variables",
            "name": "Variables",
            "nodeType": "CONNECTION",
            "properties": {
              "nodeTitle": {
                "value": "Start"
              },
              "saveVariables": {
                "value": [
                  {
                    "key": 0.3484114414593311,
                    "label": "mf-configObject (object - flowInstance)",
                    "name": "mf-configObject",
                    "nameDefault": "mf-configObject",
                    "type": "object",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"auth.svg\",\n        \"url\": \"mf-configObject\",\n        \"data\": \"{{global.parameters.mf-configObject}}\",\n        \"tooltip\": \"{{global.parameters.mf-configObject}}\",\n        \"children\": [\n          {\n            \"text\": \"mf-configObject\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  }
                ]
              }
            },
            "status": "configured",
            "type": "trigger"
          },
          "position": {
            "x": 277,
            "y": 510
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "e6p305cizv",
            "nodeType": "EVAL",
            "label": "Evaluator"
          },
          "position": {
            "x": 2190,
            "y": 720
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "5xf11lhccv",
            "nodeType": "CONNECTION",
            "connectionId": "de650ca45593b82c49064ead10b9fe17",
            "connectorId": "functionsConnector",
            "name": "Functions",
            "label": "Functions",
            "status": "configured",
            "capabilityName": "AEqualsMultipleB",
            "type": "trigger",
            "properties": {
              "leftValueA": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"http.svg\",\n        \"url\": \"buttonValue\",\n        \"data\": \"{{local.i21eb2n1ho.payload.output.buttonValue}}\",\n        \"tooltip\": \"{{local.i21eb2n1ho.payload.output.buttonValue}}\",\n        \"children\": [\n          {\n            \"text\": \"buttonValue\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "rightValueMultiple": {
                "value": [
                  {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"CONTINUE\"\n      }\n    ]\n  }\n]",
                    "id": "ud7vf5lr1a"
                  },
                  {
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"FAIL\"\n      }\n    ]\n  }\n]",
                    "id": "9tixsaxbi5"
                  }
                ]
              },
              "caseSensitive": {
                "value": false
              }
            }
          },
          "position": {
            "x": 2340,
            "y": 720
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "tzgmw6uytz",
            "nodeType": "EVAL"
          },
          "position": {
            "x": 2520,
            "y": 810
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "dbe3zrz7aw",
            "nodeType": "EVAL"
          },
          "position": {
            "x": 2490,
            "y": 690
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "capabilityName": "customErrorMessage",
            "connectionId": "53ab83a4a4ab919d9f2cb02d9e111ac8",
            "connectorId": "errorConnector",
            "id": "e46o5eta4u",
            "idUnique": "gzyujxmmvg",
            "label": "Error Customize",
            "name": "Error Message",
            "nodeType": "CONNECTION",
            "properties": {
              "errorCode": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Unexpected password state\"\n      }\n    ]\n  }\n]"
              },
              "errorDescription": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"An unexpected password state was received\"\n      }\n    ]\n  }\n]"
              },
              "errorMessage": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"An unexpected error has occurred\"\n      }\n    ]\n  }\n]"
              },
              "errorReason": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Received an unexpected password state value from PingOne\"\n      }\n    ]\n  }\n]"
              },
              "nodeDescription": {
                "value": "Received an unexpected value for the password status"
              },
              "nodeTitle": {
                "value": "Received an unexpected value"
              }
            },
            "status": "configured",
            "type": "action"
          },
          "position": {
            "x": 2640,
            "y": 930
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "grh4z4iak7",
            "nodeType": "EVAL"
          },
          "position": {
            "x": 2490,
            "y": 930
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        }
      ],
      "edges": [
        {
          "data": {
            "id": "8yeixuaqt0",
            "source": "5p51qbker7",
            "target": "7jsqi65vtl"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "ci8ylxtmd6",
            "source": "am4qtuerzq",
            "target": "255mbja8pg"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "3yf5d5s71z",
            "source": "7jsqi65vtl",
            "target": "srsltttf0p"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "hboee9d40b",
            "source": "srsltttf0p",
            "target": "w8eh3mt7d1"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "z2930jke8u",
            "source": "7bnowm7cwv",
            "target": "fk5qu0scfl"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "pfr85x5krf",
            "source": "255mbja8pg",
            "target": "058lyyouun"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "b2lcafgbex",
            "source": "6wf7qezhuw",
            "target": "5p51qbker7"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "e3xn9adfra",
            "source": "w8eh3mt7d1",
            "target": "d5xd4gj7l7"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "yu7qs8bkao",
            "source": "pyvavyfdno",
            "target": "i21eb2n1ho"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "c3p7vnzix2",
            "source": "7lbvbju71e",
            "target": "mwnugsl3ez"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "ttmak55y64",
            "source": "gfq88kd4x4",
            "target": "7bnowm7cwv"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "orq5cn5fui",
            "source": "7lbvbju71e",
            "target": "umc3t47pkp"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "eijde9sgta",
            "source": "d5xd4gj7l7",
            "target": "7lbvbju71e"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "aya2lcn0l8",
            "source": "mwnugsl3ez",
            "target": "pyvavyfdno"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "azscgzjovq",
            "source": "pyvavyfdno",
            "target": "am4qtuerzq"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "plymnjx5xg",
            "source": "fk5qu0scfl",
            "target": "6wf7qezhuw"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "5rw6er70m8",
            "source": "7jsqi65vtl",
            "target": "udbb34cil1"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "0vk4zksp6q",
            "source": "i21eb2n1ho",
            "target": "e6p305cizv"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "qufou7190f",
            "source": "e6p305cizv",
            "target": "5xf11lhccv"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "15efmnyygr",
            "source": "5xf11lhccv",
            "target": "tzgmw6uytz",
            "multiValueSourceId": "9tixsaxbi5"
          },
          "position": {
            "x": 64,
            "y": 92
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "fndz25jamd",
            "source": "tzgmw6uytz",
            "target": "xnhu0yfz4b"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "f5tk7lafe",
            "source": "5xf11lhccv",
            "target": "dbe3zrz7aw",
            "multiValueSourceId": "ud7vf5lr1a"
          },
          "position": {
            "x": 64,
            "y": 52
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "067yqg4vri",
            "source": "dbe3zrz7aw",
            "target": "am4qtuerzq"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "kkr8wcikd8",
            "source": "5xf11lhccv",
            "target": "grh4z4iak7",
            "multiValueSourceId": "-1"
          },
          "position": {
            "x": 64,
            "y": 132
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "zd9je3mf0z",
            "source": "grh4z4iak7",
            "target": "e46o5eta4u"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        }
      ]
    },
    "data": {},
    "zoomingEnabled": true,
    "userZoomingEnabled": true,
    "zoom": 1,
    "minZoom": 1E-50,
    "maxZoom": 1E+50,
    "panningEnabled": true,
    "userPanningEnabled": true,
    "pan": {
      "x": 0,
      "y": 0
    },
    "boxSelectionEnabled": true,
    "renderer": {
      "name": "null"
    }
  },
  "inputSchema": [
    {
      "description": "",
      "isExpanded": true,
      "preferredControlType": "textField",
      "preferredDataType": "object",
      "propertyName": "mf-configObject"
    }
  ],
  "flowColor": "#ff661c",
  "savedDate": 1727878921287,
  "variables": [
    {
      "context": "flowInstance",
      "createdDate": 1726504341895,
      "customerId": "7103642ff587ecb4de6b6c332453ca73",
      "fields": {
        "type": "number",
        "displayName": "reCAPTCHA v3 Threshold",
        "value": "0.7",
        "mutable": true,
        "min": 0,
        "max": 2000
      },
      "id": "351b430c-1fa7-4947-a5a0-37c0a3b47c02",
      "type": "property",
      "visibility": "private",
      "name": "CAPTCHA_THRESHOLD##SK##flowInstance",
      "companyId": "80ee135e-9d4e-4084-8b96-c3131c04c432"
    },
    {
      "context": "flowInstance",
      "createdDate": 1726504368153,
      "fields": {
        "displayName": "",
        "max": 2000,
        "min": 0,
        "mutable": true,
        "type": "string"
      },
      "id": "605aba43-0f73-4868-af2a-f7939037527f",
      "type": "property",
      "visibility": "private",
      "name": "CAPTCHA_V3_SECRET##SK##flowInstance",
      "companyId": "80ee135e-9d4e-4084-8b96-c3131c04c432"
    },
    {
      "context": "flowInstance",
      "createdDate": 1726504365510,
      "fields": {
        "displayName": "",
        "max": 2000,
        "min": 0,
        "mutable": true,
        "type": "string"
      },
      "id": "e542edb9-9462-4047-b116-a232468a74e1",
      "type": "property",
      "visibility": "private",
      "name": "companyLogo##SK##flowInstance",
      "companyId": "80ee135e-9d4e-4084-8b96-c3131c04c432"
    },
    {
      "context": "flowInstance",
      "createdDate": 1726504365513,
      "fields": {
        "displayName": "Internal variable",
        "max": 2000,
        "min": 0,
        "mutable": true,
        "type": "string"
      },
      "id": "5158e728-acef-446b-b0cc-88c6b8e465a0",
      "type": "property",
      "visibility": "private",
      "name": "companyName##SK##flowInstance",
      "companyId": "80ee135e-9d4e-4084-8b96-c3131c04c432"
    },
    {
      "context": "flowInstance",
      "createdDate": 1726504365513,
      "fields": {
        "displayName": "",
        "max": 2000,
        "min": 0,
        "mutable": true,
        "type": "object"
      },
      "id": "9ae2c7ed-62a4-4185-8041-83f219be6fbc",
      "type": "property",
      "visibility": "private",
      "name": "mf-configObject##SK##flowInstance",
      "companyId": "80ee135e-9d4e-4084-8b96-c3131c04c432"
    }
  ]
}
