{
  "companyId": "5e4b5c7b-636d-492e-ad93-f736f905c9cf",
  "authTokenExpireIds": [],
  "connectorIds": [
    "functionsConnector",
    "httpConnector",
    "errorConnector",
    "annotationConnector",
    "variablesConnector",
    "analyticsConnector"
  ],
  "createdDate": 1729786006947,
  "currentVersion": 4,
  "customerId": "7103642ff587ecb4de6b6c332453ca73",
  "description": "Imported on Fri Mar 01 2024 21:47:09 GMT+0000 (Coordinated Universal Time)",
  "flowStatus": "enabled",
  "inputSchemaCompiled": {
    "parameters": {
      "type": "object",
      "properties": {
        "p1UserId": {
          "description": "PingOne User Id",
          "isExpanded": true,
          "preferredDataType": "string",
          "type": "string",
          "name": "p1UserId"
        },
        "securityQA": {
          "description": "",
          "isExpanded": true,
          "preferredDataType": "object",
          "type": "object",
          "name": "securityQA"
        },
        "mf-configObject": {
          "description": "",
          "isExpanded": true,
          "preferredDataType": "object",
          "type": "object",
          "name": "mf-configObject"
        }
      },
      "additionalProperties": false,
      "required": [
        "p1UserId"
      ]
    }
  },
  "isInputSchemaSaved": true,
  "isOutputSchemaSaved": false,
  "name": "PingOne Security Question and Answer Validation subflow",
  "publishedVersion": 4,
  "settings": {
    "csp": "worker-src 'self' blob:; script-src 'self' https://cdn.jsdelivr.net https://code.jquery.com https://devsdk.singularkey.com http://cdnjs.cloudflare.com 'unsafe-inline' 'unsafe-eval';",
    "cssLinks": [
      "https://assets.pingone.com/ux/end-user-nano/0.1.0-alpha.1/end-user-nano.css",
      "https://assets.pingone.com/ux/astro-nano/0.1.0-alpha.10/icons.css"
    ],
    "flowTimeoutInSeconds": 3600,
    "intermediateLoadingScreenCSS": "",
    "intermediateLoadingScreenHTML": "",
    "logLevel": 3,
    "useCustomCSS": true
  },
  "timeouts": "null",
  "updatedDate": 1729786008346,
  "flowId": "c0c362b9c0f1d050139f88a071c4986d",
  "versionId": 4,
  "graphData": {
    "elements": {
      "nodes": [
        {
          "data": {
            "capabilityName": "customFunction",
            "connectionId": "de650ca45593b82c49064ead10b9fe17",
            "connectorId": "functionsConnector",
            "id": "b4yq41plyh",
            "label": "Functions",
            "name": "Functions",
            "nodeType": "CONNECTION",
            "properties": {
              "code": {
                "value": "module.exports = async ({ params }) => {\n  // Check if securityQA exists in params\n  if (!params || !params.securityQA) {\n    throw new Error(\"Invalid input: securityQA is missing.\");\n  }\n\n  const inputObj = params.securityQA;\n  const questionSet = [];\n\n  // Iterate over keys in inputObj that start with \"question\"\n  Object.keys(inputObj)\n    .filter((key) => key.startsWith(\"question\"))\n    .forEach((key, index) => {\n      const questionNumber = key.replace(\"question\", \"\");\n\n      // Create a new object with the corresponding question, answer, and questionIndex\n      const questionObject = {\n        question: inputObj[key],\n        answer: inputObj[`answer${questionNumber}`],\n        questionIndex: index + 1,\n      };\n\n      // Push the new object to the result array\n      questionSet.push(questionObject);\n    });\n\n  // Return the resulting JSON object\n    return {'questionSet' : questionSet}\n};\n\n\n"
              },
              "nodeTitle": {
                "value": "Parse Security Q&A"
              },
              "outputSchema": {
                "value": "{\n\t\"output\": {\n\t\t\"type\": \"object\",\n\t\t\"properties\": {\n\t\t\t\"questionSet\": {\n\t\t\t\t\"type\": \"object\"\n\t\t\t}\n\t\t}\n\t}\n}"
              },
              "variableInputList": {
                "value": [
                  {
                    "name": "securityQA",
                    "preferredDataType": "object",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"variable.svg\",\n        \"url\": \"securityQA\",\n        \"data\": \"{{global.variables.securityQA}}\",\n        \"tooltip\": \"{{global.variables.securityQA}}\",\n        \"children\": [\n          {\n            \"text\": \"securityQA\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  }
                ]
              }
            },
            "status": "configured",
            "type": "trigger"
          },
          "position": {
            "x": 810,
            "y": 510
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "kospqzm7v2",
            "nodeType": "EVAL"
          },
          "position": {
            "x": 930,
            "y": 510
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "capabilityName": "customHTMLTemplate",
            "connectionId": "867ed4363b2bc21c860085ad2baa817d",
            "connectorId": "httpConnector",
            "id": "76f5jr2jz3",
            "label": "Http",
            "name": "Http",
            "nodeType": "CONNECTION",
            "properties": {
              "backgroundColor": {
                "value": "#afd5ffff"
              },
              "buttonLabel": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Submit\"\n      }\n    ]\n  }\n]"
              },
              "buttonLabel2": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Cancel\"\n      }\n    ]\n  }\n]"
              },
              "customCSS": {
                "value": ":root {\n  --animation-dimension: 120px;\n  --animation-start-color: #71e171;\n  --animation-midway-color: #67d067;\n  --animation-finish-color: #59b259;\n}\n\n.checkmark {\n  width: var(--animation-dimension);\n  height: var(--animation-dimension);\n  border-radius: 50%;\n  display: block;\n  stroke-width: 5;\n  stroke: #ffffff;\n  stroke-miterlimit: 10;\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\n  animation: fill 0.4s ease-in-out 0.4s forwards,\n    scale 0.3s ease-in-out 0.9s both;\n}\n\n.checkmarkCircle {\n  stroke-dasharray: 166;\n  stroke-dashoffset: 166;\n  stroke-width: 5;\n  stroke-miterlimit: 10;\n  stroke: var(--animation-finish-color);\n  fill: none;\n  animation: stroke 0.6s cubic-bezier(0.65, 0, 0.45, 1) forwards,\n    colorChange 1.2s ease-in-out forwards;\n}\n\n.checkmarkCheck {\n  transform-origin: 50% 50%;\n  stroke-dasharray: 48;\n  stroke-dashoffset: 48;\n  animation: stroke 0.3s cubic-bezier(0.65, 0, 0.45, 1) 0.8s forwards,\n    colorChange 0.6s ease-in-out 0.8s forwards;\n}\n\n@keyframes colorChange {\n  0% {\n    stroke: var(--animation-start-color);\n  }\n  50% {\n    stroke: var(--animation-midway-color);\n  } \n  100% {\n    stroke: var(--animation-finish-color);\n  }\n}\n\n@keyframes stroke {\n  100% {\n    stroke-dashoffset: 0;\n  }\n}\n@keyframes scale {\n  0%,\n  100% {\n    transform: none;\n  }\n  50% {\n    transform: scale3d(1.1, 1.1, 1);\n  }\n  70% {\n    transform: scale3d(0.98, 0.98, 1);\n  }\n  85% {\n    transform: scale3d(1.02, 1.02, 1);\n  }\n}\n@keyframes fill {\n  100% {\n    box-shadow: inset 0px 0px 0px 0px var(--animation-finish-color);\n  }\n}"
              },
              "customHTML": {
                "value": "<!-- Main container for centering content -->\n<div class=\"end-user-nano\">\n    <!-- Full-screen background container with flexbox for centering content -->\n    <div class=\"bg-light d-flex flex-column justify-content-center align-items-center position-absolute top-0 start-0 bottom-0 end-0 overflow-auto\">\n        <!-- Container with fixed width for the card -->\n        <div style=\"max-width: 400px; min-width: 400px; width: 100%\">\n            <!-- Card with shadow for visual appeal -->\n            <div class=\"card shadow mb-5\">\n                <main aria-labelledby=\"title\">\n                    <!-- Card body with padding and column layout -->\n                    <div class=\"card-body p-5 d-flex flex-column\">\n                        <!-- Company logo -->\n                         <img class=\"companyLogo align-self-center mb-4\" src=\"{{global.variables.companyLogo}}\"  alt=\"{{global.variables.companyName}}\" />\n\n                        <!-- Conditional title, rendered if `title` is provided -->\n                        {{#if title}}\n                        <h1 class=\"text-center mb-4\">{{title}}</h1>\n                        {{/if}}\n\n                        <!-- Conditional textOne, rendered if `textOne` is provided -->\n                        {{#if textOne}}\n                        <h2 class=\"text-muted text-center\">{{textOne}}</h2>\n                        {{/if}}\n\n                        <!-- Conditional textTwo, rendered if `textTwo` is provided -->\n                        {{#if textTwo}}\n                        <p class=\"text-muted text-center\">{{textTwo}}</p>\n                        {{/if}}\n\n                        <!-- Generic Error Message -->\n                        <p class=\"text-danger mdi mdi-alert-circle \" id=\"feedbackError\" data-id=\"feedback\" data-skcomponent=\"skerror\" aria-live=\"assertive\"></p>\n\n                        <!-- Security Questions Form -->\n                        <form id=\"securityQA\">\n                            <!-- Question selection dropdown -->\n                            <div class=\"mb-3 row selectBox\">\n                                <label for=\"Question\" class=\"col-sm-5 col-form-label\">\n                                    <span>Select Question</span>\n                                    <span class=\"starRed\">*</span>\n                                </label>\n                                <div class=\"col-sm-7\">\n                                    <select class=\"form-select\" id=\"selectQuestion\" aria-label=\"Default select\">\n                                        <option selected>select</option>\n                                        {{#each questionSet}}\n                                            <option value=\"{{question}}\">{{question}}</option>\n                                        {{/each}}\n                                    </select>\n                                </div>\n                            </div>\n\n                            <!-- Answer input field -->\n                            <div class=\"mb-4 form-floating\">\n                                <input class=\"form-control\" type=\"text\" id=\"answer\" name=\"answer\" placeholder=\"answer\" autocomplete=\"off\" value=\"\" data-id=\"answer-input\" />\n                                <label class=\"form-label\" for=\"answer\">Answer</label>\n                            </div>\n\n                            <!-- Conditional submit button, rendered if `buttonLabel` is provided -->\n                            {{#if buttonLabel}}\n                            <div class=\"d-flex flex-column\">\n                                <button id=\"submitBtn\" data-id=\"submitBtn\" class=\"btn btn-primary mb-3\" type=\"submit\" data-skcomponent=\"skbutton\" data-skform=\"securityQA\" data-skbuttontype=\"form-submit\" data-skbuttonvalue=\"SUBMIT\">\n                                    {{buttonLabel}}\n                                </button>\n                            </div>\n                            {{/if}}\n\n                            <!-- Conditional cancel button, rendered if `buttonLabel2` is provided -->\n                            {{#if buttonLabel2}}\n                            <div class=\"d-flex flex-column\">\n                                <button id=\"cancelBtn\" data-id=\"cancelBtn\" class=\"btn btn-link mb-3\" type=\"submit\" data-skcomponent=\"skbutton\" data-skform=\"securityQA\" data-skbuttontype=\"next-event\" data-skbuttonvalue=\"CANCEL\">\n                                    {{buttonLabel2}}\n                                </button>\n                            </div>\n                            {{/if}}\n                        </form>\n                    </div>\n                </main>\n            </div>\n        </div>\n    </div>\n</div>"
              },
              "customScript": {},
              "formFieldsList": {
                "value": [
                  {
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "propertyName": "buttonValue",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"submit\"\n      }\n    ]\n  }\n]"
                  },
                  {
                    "hashedVisibility": false,
                    "preferredControlType": "dropDown",
                    "preferredDataType": "number",
                    "propertyName": "selectQuestion",
                    "value": ""
                  },
                  {
                    "hashedVisibility": false,
                    "preferredControlType": "textField",
                    "preferredDataType": "string",
                    "propertyName": "answer",
                    "value": ""
                  }
                ]
              },
              "inputSchema": {
                "value": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"title\": {\n            \"type\": \"string\",\n            \"displayName\": \"Title\",\n            \"preferredControlType\": \"textField\",\n            \"enableParameters\": true,\n            \"propertyName\": \"title\"\n        },\n\t\"textOne\": {\n            \"type\": \"string\",\n            \"displayName\": \"Text One\",\n            \"preferredControlType\": \"textField\",\n            \"enableParameters\": true,\n            \"propertyName\": \"textOne\"\n        },\n\t\"textTwo\": {\n            \"type\": \"string\",\n            \"displayName\": \"Text Two\",\n            \"preferredControlType\": \"textField\",\n            \"enableParameters\": true,\n            \"propertyName\": \"textTwo\"\n        },\n        \"buttonLabel\": {\n            \"type\": \"string\",\n            \"displayName\": \"Button Label\",\n            \"preferredControlType\": \"textField\",\n            \"enableParameters\": true,\n            \"propertyName\": \"buttonLabel\"\n        },\n        \"buttonLabel2\": {\n            \"type\": \"string\",\n            \"displayName\": \"Button Label2\",\n            \"preferredControlType\": \"textField\",\n            \"enableParameters\": true,\n            \"propertyName\": \"buttonLabel2\"\n        },\n         \"questionSet\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"question\": {\n                    \"displayName\": \"question\",\n                    \"preferedControlType\": \"textField\",\n                    \"enableParameters\": true\n                },\n                \"questionIndex\": {\n                    \"displayName\": \"questionIndex\",\n                    \"preferedControlType\": \"textField\",\n                    \"enableParameters\": true\n                }\n            }\n        }\n    }\n}"
              },
              "nodeDescription": {
                "value": "A form for the user to submit the username of the account they forgot the password to"
              },
              "nodeTitle": {
                "value": "Security Q&A Form"
              },
              "questionSet": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"functions.svg\",\n        \"url\": \"questionSet\",\n        \"data\": \"{{local.b4yq41plyh.payload.output.questionSet}}\",\n        \"tooltip\": \"{{local.b4yq41plyh.payload.output.questionSet}}\",\n        \"children\": [\n          {\n            \"text\": \"questionSet\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "textOne": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"Security Questions\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "textTwo": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"Choose your security question and provide the answer\"\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "title": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"{{global.variables.mf-configObject.config.mf-str-companyName}}\"\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "validationRules": {
                "value": []
              }
            },
            "status": "configured",
            "type": "trigger"
          },
          "position": {
            "x": 1080,
            "y": 510
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "shueidp1iu",
            "label": "Evaluator",
            "nodeType": "EVAL"
          },
          "position": {
            "x": 1230,
            "y": 510
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "capabilityName": "AEqualsMultipleB",
            "connectionId": "de650ca45593b82c49064ead10b9fe17",
            "connectorId": "functionsConnector",
            "id": "6wyepwnxww",
            "label": "Functions",
            "name": "Functions",
            "nodeType": "CONNECTION",
            "properties": {
              "leftValueA": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"http.svg\",\n        \"url\": \"buttonValue\",\n        \"data\": \"{{local.76f5jr2jz3.payload.output.buttonValue}}\",\n        \"tooltip\": \"{{local.76f5jr2jz3.payload.output.buttonValue}}\",\n        \"children\": [\n          {\n            \"text\": \"buttonValue\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
              },
              "rightValueMultiple": {
                "value": [
                  {
                    "id": "j9x1wfxdd4",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"SUBMIT\"\n      }\n    ]\n  }\n]"
                  },
                  {
                    "id": "4jpwzq7aob",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"CANCEL\"\n      }\n    ]\n  }\n]"
                  }
                ]
              }
            },
            "status": "configured",
            "type": "trigger"
          },
          "position": {
            "x": 1380,
            "y": 510
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "aoesxcfh7z",
            "label": "Evaluator",
            "nodeType": "EVAL"
          },
          "position": {
            "x": 1560,
            "y": 510
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "capabilityName": "customFunction",
            "connectionId": "de650ca45593b82c49064ead10b9fe17",
            "connectorId": "functionsConnector",
            "id": "8qrnpcmeud",
            "label": "Functions",
            "name": "Functions",
            "nodeType": "CONNECTION",
            "properties": {
              "code": {
                "value": "module.exports = a = async ({ params }) => {\n  const inputObj = params.questionSet;\n  const inputQuestion = params.inputQuestion;\n  const inputAnswer = params.inputAnswer;\n\n  // Find the question object based on the input question\n  const questionObj = inputObj.find(obj => obj.question === inputQuestion);\n\n  if (questionObj) {\n    const actualAnswer = questionObj.answer;\n\n    // Convert both answers to lowercase for case-insensitive comparison\n    const lowercasedActualAnswer = actualAnswer.toLowerCase();\n    const lowercasedInputAnswer = inputAnswer.trim().toLowerCase(); // Trim leading/trailing spaces\n\n    // Compare the lowercase input answer against the lowercase actual answer\n    if (lowercasedActualAnswer === lowercasedInputAnswer)\n    {\n    return;\n    } else\n    {\n      return false;\n    }\n  } else {\n    return false;\n  }\n};\n"
              },
              "nodeTitle": {
                "value": "Compare Answers"
              },
              "outputSchema": {
                "value": "{\n\t\"output\": {\n\t\t\"type\": \"object\",\n\t\t\"properties\": {\n\t\t\t\"isAnswerCorrect\": {\n\t\t\t\t\"type\": \"boolean\"\n\t\t\t}\n\t\t}\n\t}\n}"
              },
              "variableInputList": {
                "value": [
                  {
                    "name": "questionSet",
                    "preferredDataType": "object",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"functions.svg\",\n        \"url\": \"questionSet\",\n        \"data\": \"{{local.b4yq41plyh.payload.output.questionSet}}\",\n        \"tooltip\": \"{{local.b4yq41plyh.payload.output.questionSet}}\",\n        \"children\": [\n          {\n            \"text\": \"questionSet\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  },
                  {
                    "name": "inputAnswer",
                    "preferredDataType": "string",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"http.svg\",\n        \"url\": \"answer\",\n        \"data\": \"{{local.76f5jr2jz3.payload.output.answer}}\",\n        \"tooltip\": \"{{local.76f5jr2jz3.payload.output.answer}}\",\n        \"children\": [\n          {\n            \"text\": \"answer\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  },
                  {
                    "name": "inputQuestion",
                    "preferredDataType": "string",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"http.svg\",\n        \"url\": \"selectQuestion\",\n        \"data\": \"{{local.76f5jr2jz3.payload.output.selectQuestion}}\",\n        \"tooltip\": \"{{local.76f5jr2jz3.payload.output.selectQuestion}}\",\n        \"children\": [\n          {\n            \"text\": \"selectQuestion\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  }
                ]
              }
            },
            "status": "configured",
            "type": "trigger"
          },
          "position": {
            "x": 1710,
            "y": 510
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "nl2lr3169z",
            "label": "Evaluator",
            "nodeType": "EVAL",
            "properties": {
              "922c0l5tvr": {
                "value": "anyTriggersFalse"
              },
              "d59jawjmab": {
                "value": "anyTriggersFalse"
              },
              "pkzo9jdt54": {
                "value": "anyTriggersFalse"
              }
            }
          },
          "position": {
            "x": 1860,
            "y": 510
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "capabilityName": "createSuccessResponse",
            "connectionId": "867ed4363b2bc21c860085ad2baa817d",
            "connectorId": "httpConnector",
            "id": "x22igq4eqe",
            "label": "Http",
            "name": "Http",
            "nodeType": "CONNECTION",
            "properties": {
              "backgroundColor": {
                "value": "#9dc967ff"
              },
              "nodeTitle": {
                "value": "Success"
              }
            },
            "status": "configured",
            "type": "action"
          },
          "position": {
            "x": 2340,
            "y": 510
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "capabilityName": "customErrorMessage",
            "connectionId": "53ab83a4a4ab919d9f2cb02d9e111ac8",
            "connectorId": "errorConnector",
            "id": "922c0l5tvr",
            "label": "Error Customize",
            "name": "Error Message",
            "nodeType": "CONNECTION",
            "properties": {
              "errorMessage": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Does not match our records, please try again\"\n      }\n    ]\n  }\n]"
              },
              "nodeTitle": {
                "value": "Error returned to screen if answer is incorrect"
              }
            },
            "status": "configured",
            "type": "action"
          },
          "position": {
            "x": 2070,
            "y": 630
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "ggq0nin4b8",
            "label": "Evaluator",
            "nodeType": "EVAL"
          },
          "position": {
            "x": 1560,
            "y": 630
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "capabilityName": "createErrorResponse",
            "connectionId": "867ed4363b2bc21c860085ad2baa817d",
            "connectorId": "httpConnector",
            "id": "yucpjbw3rj",
            "label": "Http",
            "name": "Http",
            "nodeType": "CONNECTION",
            "properties": {
              "backgroundColor": {
                "value": "#ffc8c1ff"
              },
              "nodeTitle": {
                "value": "Cancel button "
              },
              "returnRequestParameters": {
                "value": false
              }
            },
            "status": "configured",
            "type": "action"
          },
          "position": {
            "x": 1710,
            "y": 630
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "capabilityName": "customErrorMessage",
            "connectionId": "53ab83a4a4ab919d9f2cb02d9e111ac8",
            "connectorId": "errorConnector",
            "id": "soycnvmku9",
            "label": "Error Customize",
            "name": "Error Message",
            "nodeType": "CONNECTION",
            "properties": {
              "errorCode": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Unexpected password state\"\n      }\n    ]\n  }\n]"
              },
              "errorDescription": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"An unexpected password state was received\"\n      }\n    ]\n  }\n]"
              },
              "errorMessage": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"An unexpected error has occurred\"\n      }\n    ]\n  }\n]"
              },
              "errorReason": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Received an unexpected password state value from PingOne\"\n      }\n    ]\n  }\n]"
              },
              "nodeDescription": {
                "value": "Received an unexpected value for the password status"
              },
              "nodeTitle": {
                "value": "Received an unexpected value"
              }
            },
            "status": "configured",
            "type": "action"
          },
          "position": {
            "x": 1710,
            "y": 780
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "gq67gxjv12",
            "nodeType": "EVAL"
          },
          "position": {
            "x": 1530,
            "y": 780
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "capabilityName": "updateAnnotationProperties",
            "connectionId": "921bfae85c38ed45045e07be703d86b8",
            "connectorId": "annotationConnector",
            "id": "fmghoh064q",
            "name": "Annotation",
            "nodeType": "ANNOTATION",
            "properties": {
              "annotation": {
                "value": "Security questions for MFA"
              },
              "annotationTextColor": {
                "value": "#ffffffff"
              },
              "backgroundColor": {
                "value": "#4462edff"
              },
              "cornerRadius": {
                "value": 8
              },
              "fontFamily": {
                "value": "sans-serif"
              },
              "fontSize": {
                "value": 16
              },
              "fontStyle": {
                "value": "bold"
              },
              "width": {
                "value": 1800
              }
            },
            "status": "configured",
            "type": "action"
          },
          "position": {
            "x": 542,
            "y": 214
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "capabilityName": "updateAnnotationProperties",
            "connectionId": "921bfae85c38ed45045e07be703d86b8",
            "connectorId": "annotationConnector",
            "id": "vwxspp67pg",
            "idUnique": "o2v5xhdcbc",
            "name": "Annotation",
            "nodeType": "ANNOTATION",
            "properties": {
              "annotation": {
                "value": "Last Updated: 8/20, 2024"
              },
              "annotationTextColor": {
                "value": "#000000"
              },
              "backgroundColor": {
                "value": "#ffffffff"
              },
              "cornerRadius": {
                "value": 8
              },
              "fontFamily": {
                "value": "sans-serif"
              },
              "fontSize": {
                "value": 14
              },
              "strokeColor": {
                "value": "#181818ff"
              },
              "strokeEnabled": {
                "value": false
              },
              "strokeWidth": {
                "value": 1
              },
              "width": {
                "value": 240
              }
            },
            "status": "configured",
            "type": "action"
          },
          "position": {
            "x": 214,
            "y": 223
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "capabilityName": "updateAnnotationProperties",
            "connectionId": "921bfae85c38ed45045e07be703d86b8",
            "connectorId": "annotationConnector",
            "id": "xfq3b59svg",
            "name": "Annotation",
            "nodeType": "ANNOTATION",
            "properties": {
              "annotation": {
                "value": "Validate KBA answers"
              },
              "annotationTextColor": {
                "value": "#ffffffff"
              },
              "backgroundColor": {
                "value": "#5D00D6ff"
              },
              "cornerRadius": {
                "value": 8
              },
              "fontFamily": {
                "value": "sans-serif"
              },
              "fontSize": {
                "value": 14
              },
              "fontStyle": {
                "value": "bold"
              },
              "width": {
                "value": 1500
              }
            },
            "status": "configured",
            "type": "action"
          },
          "position": {
            "x": 662,
            "y": 334
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "capabilityName": "saveValue",
            "connectionId": "06922a684039827499bdbdd97f49827b",
            "connectorId": "variablesConnector",
            "id": "jj7ajtvvcq",
            "label": "Variables",
            "name": "Variables",
            "nodeType": "CONNECTION",
            "properties": {
              "nodeTitle": {
                "value": "Start"
              },
              "saveVariables": {
                "value": [
                  {
                    "key": 0.03699416513260978,
                    "label": "securityQA (object - flowInstance)",
                    "name": "securityQA",
                    "nameDefault": "securityQA",
                    "type": "object",
                    "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"\"\n      },\n      {\n        \"text\": \"\"\n      },\n      {\n        \"type\": \"link\",\n        \"src\": \"auth.svg\",\n        \"url\": \"securityQA\",\n        \"data\": \"{{global.parameters.securityQA}}\",\n        \"tooltip\": \"{{global.parameters.securityQA}}\",\n        \"children\": [\n          {\n            \"text\": \"securityQA\"\n          }\n        ]\n      },\n      {\n        \"text\": \"\"\n      }\n    ]\n  }\n]"
                  }
                ]
              }
            },
            "status": "configured",
            "type": "trigger"
          },
          "position": {
            "x": 240,
            "y": 510
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "kvuk6aysfy",
            "nodeType": "CONNECTION",
            "connectionId": "c4b2032a1b63d370c5fbdd205522f1c5",
            "connectorId": "analyticsConnector",
            "name": "Flow Analytics",
            "label": "Flow Analytics",
            "status": "configured",
            "capabilityName": "logOutcome",
            "type": "action",
            "properties": {
              "outcomeType": {
                "value": "login"
              },
              "outcomeStatus": {
                "value": "success"
              },
              "shouldContinueOnError": {
                "value": true
              },
              "nodeTitle": {
                "value": "Start Q&A"
              },
              "outcomeStatusDetail": {
                "value": "Start Q&A"
              },
              "outcomeDescription": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Start Q&A\"\n      }\n    ]\n  }\n]"
              }
            },
            "idUnique": "ldqzen4wu1"
          },
          "position": {
            "x": 510,
            "y": 510
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "lztvugt50w",
            "nodeType": "EVAL"
          },
          "position": {
            "x": 375,
            "y": 510
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "cdeoex0mvp",
            "nodeType": "EVAL"
          },
          "position": {
            "x": 645,
            "y": 510
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "mpyczbcgix",
            "nodeType": "CONNECTION",
            "connectionId": "c4b2032a1b63d370c5fbdd205522f1c5",
            "connectorId": "analyticsConnector",
            "name": "Flow Analytics",
            "label": "Flow Analytics",
            "status": "configured",
            "capabilityName": "logOutcome",
            "type": "action",
            "properties": {
              "outcomeType": {
                "value": "login"
              },
              "outcomeStatus": {
                "value": "success"
              },
              "shouldContinueOnError": {
                "value": true
              },
              "nodeTitle": {
                "value": "Finish Q&A"
              },
              "outcomeStatusDetail": {
                "value": "Finish Q&A"
              },
              "outcomeDescription": {
                "value": "[\n  {\n    \"children\": [\n      {\n        \"text\": \"Finish Q&A\"\n      }\n    ]\n  }\n]"
              }
            },
            "idUnique": "2ahxiee18j"
          },
          "position": {
            "x": 2070,
            "y": 510
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        },
        {
          "data": {
            "id": "nmek2pj8rg",
            "nodeType": "EVAL"
          },
          "position": {
            "x": 2205,
            "y": 510
          },
          "group": "nodes",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": false,
          "classes": ""
        }
      ],
      "edges": [
        {
          "data": {
            "id": "t7d4k0o04s",
            "source": "nl2lr3169z",
            "target": "922c0l5tvr"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "b5eqpn4fk8",
            "multiValueSourceId": "4jpwzq7aob",
            "source": "6wyepwnxww",
            "target": "ggq0nin4b8"
          },
          "position": {
            "x": 64,
            "y": 92
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "i36vers685",
            "source": "ggq0nin4b8",
            "target": "yucpjbw3rj"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "j6e2ltj4xx",
            "source": "gq67gxjv12",
            "target": "soycnvmku9"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "sl04j1l8t8",
            "multiValueSourceId": "-1",
            "source": "6wyepwnxww",
            "target": "gq67gxjv12"
          },
          "position": {
            "x": 64,
            "y": 132
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "7ikahw4ox1",
            "source": "kospqzm7v2",
            "target": "76f5jr2jz3"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "j2nvtiqvub",
            "source": "b4yq41plyh",
            "target": "kospqzm7v2"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "0592y2ehfx",
            "multiValueSourceId": "j9x1wfxdd4",
            "source": "6wyepwnxww",
            "target": "aoesxcfh7z"
          },
          "position": {
            "x": 64,
            "y": 52
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "i6khjcb4t5",
            "source": "8qrnpcmeud",
            "target": "nl2lr3169z"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "s3tc7dnu2u",
            "source": "shueidp1iu",
            "target": "6wyepwnxww"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "0s7o6i7c5z",
            "source": "aoesxcfh7z",
            "target": "8qrnpcmeud"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "0rghqh5mhu",
            "source": "76f5jr2jz3",
            "target": "shueidp1iu"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "ljmwh7qn78",
            "source": "cdeoex0mvp",
            "target": "b4yq41plyh"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "mg60aeg2bs",
            "source": "jj7ajtvvcq",
            "target": "lztvugt50w"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "vtsn4n9b7e",
            "source": "lztvugt50w",
            "target": "kvuk6aysfy"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "9u39foizak",
            "source": "kvuk6aysfy",
            "target": "cdeoex0mvp"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "w7sbl8yz6i",
            "source": "nl2lr3169z",
            "target": "mpyczbcgix"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "0ic3l9hki3",
            "source": "mpyczbcgix",
            "target": "nmek2pj8rg"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        },
        {
          "data": {
            "id": "6j8557hvr6",
            "source": "nmek2pj8rg",
            "target": "x22igq4eqe"
          },
          "position": {
            "x": 0,
            "y": 0
          },
          "group": "edges",
          "removed": false,
          "selected": false,
          "selectable": true,
          "locked": false,
          "grabbable": true,
          "pannable": true,
          "classes": ""
        }
      ]
    },
    "data": {},
    "zoomingEnabled": true,
    "userZoomingEnabled": true,
    "zoom": 1,
    "minZoom": 1E-50,
    "maxZoom": 1E+50,
    "panningEnabled": true,
    "userPanningEnabled": true,
    "pan": {
      "x": 0,
      "y": 0
    },
    "boxSelectionEnabled": true,
    "renderer": {
      "name": "null"
    }
  },
  "inputSchema": [
    {
      "description": "PingOne User Id",
      "isExpanded": true,
      "preferredControlType": "textField",
      "preferredDataType": "string",
      "propertyName": "p1UserId",
      "required": true
    },
    {
      "description": "",
      "isExpanded": true,
      "preferredControlType": "textField",
      "preferredDataType": "object",
      "propertyName": "securityQA"
    },
    {
      "description": "",
      "isExpanded": true,
      "preferredControlType": "textField",
      "preferredDataType": "object",
      "propertyName": "mf-configObject"
    }
  ],
  "flowColor": "#ff661c",
  "savedDate": 1729786006830,
  "variables": [
    {
      "context": "flowInstance",
      "createdDate": 1729617721659,
      "fields": {
        "displayName": "",
        "max": 2000,
        "min": 0,
        "mutable": true,
        "type": "object"
      },
      "id": "dd9eed10-aab7-42f5-9926-69e162e547ef",
      "type": "property",
      "visibility": "private",
      "name": "securityQA##SK##flowInstance",
      "companyId": "5e4b5c7b-636d-492e-ad93-f736f905c9cf"
    },
    {
      "context": "flowInstance",
      "createdDate": 1729617691821,
      "fields": {
        "displayName": "",
        "max": 2000,
        "min": 0,
        "mutable": true,
        "type": "string"
      },
      "id": "15869bd2-a03d-4d23-9e6d-b41caf012029",
      "type": "property",
      "visibility": "private",
      "name": "companyLogo##SK##flowInstance",
      "companyId": "5e4b5c7b-636d-492e-ad93-f736f905c9cf"
    },
    {
      "context": "flowInstance",
      "createdDate": 1729617691822,
      "fields": {
        "displayName": "Internal variable",
        "max": 2000,
        "min": 0,
        "mutable": true,
        "type": "string"
      },
      "id": "288db8a8-fde1-4499-bfe9-34f389edc926",
      "type": "property",
      "visibility": "private",
      "name": "companyName##SK##flowInstance",
      "companyId": "5e4b5c7b-636d-492e-ad93-f736f905c9cf"
    }
  ]
}
